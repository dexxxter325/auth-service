name: CI #имя на гитхабе

on:  #условия для выполнения данного файла.
  push: #Он будет запускаться при пуше(отправка изменений из локальной ветки) в ветку main
    branches:
      - main
  pull_request: #он будет запускаться при pull запросе - запрос на внесение изменений из одной ветки в другую
    branches:
      - main

env:
  REGISTRY: "docker.io/flaw1ess"
  IMAGE_NAME: "crud_api" #имя docker-образа
  CONTAINER_NAME: "crud_api"
  ENV_FILE_PATH: "./CRUD_API/.env"
  LOGS_PATH: "/root/crud-api/api/logs/prod"
  #$GITHUB_SHA-уникальный хеш последнего коммита в репозитории на GitHub.

jobs:
  test: #имя процесса
    runs-on: ubuntu-latest #удаленная машина(от GitHub),на кот.будут выполняться команды
    steps: # список шагов для выполнения в рамках данного джоба.
      - name: Checkout main #название шага
        uses: actions/checkout@v2 #переключаемся в нашу ветку main на удал.машине

      - name: Set up Go 1.21
        uses: actions/setup-go@v2 #устанавливаем на удаленную машину инструментарий Go
        with:
          go-version: 1.21 #параметры для установки

      - name: Install migrate
        run: |
            curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
            sudo mv migrate.linux-amd64 /usr/local/bin/migrate

      - name: Test
        run: go test ./...

#нам нужно облако развертывания приложения ,тк оно нам создаet эндпоинт для нашего приложения, который будет доступен в интернете.После развертывания ,я получаю URL-адресс приложения
  build_and_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build container image
        run: docker build -t $REGISTRY/$IMAGE_NAME:latest .

      - name: Push image to Docker Hub Container Registry
        run: docker push $REGISTRY/$IMAGE_NAME:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Docker image from Docker Hub
        run: docker pull flaw1ess/crud_api:latest

      - name: Stop and remove the existing container (if exists)
        run: docker stop crud_api || true && docker rm crud_api || true

      - name: Run a new container from the pulled image
        run: docker run -d --name crud_api -p 80:80 \
          --restart always \
          flaw1ess/crud_api:latest

          
        



