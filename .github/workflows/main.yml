name: CI #имя на гитхабе

on:  #условия для выполнения данного файла.
  push: #Он будет запускаться при пуше(отправка изменений в локальной ветке) в ветку мастер
    branches:
      - main
  pull_request: #он будет запускаться при pull запросе - запрос на внесение изменений из одной ветки в другую
    branches:
      - main

env:
  REGISTRY: "docker.io"
  IMAGE_NAME: "flaw1ess/crud_api" #имя docker-образа
  CONTAINER_NAME: "crud_api"
  ENV_FILE_PATH: "./crud-api/.env.prod"
  LOGS_PATH: "/root/crud-api/api/logs/prod"
  #$GITHUB_SHA-уникальный хеш последнего коммита в репозитории на GitHub.

jobs:
  test: #имя процесса
    runs-on: ubuntu-latest #удаленная машина(от GitHub),на кот.будут выполняться команды
    steps: # список шагов для выполнения в рамках данного джоба.
      - name: Checkout main #название шага
        uses: actions/checkout@v2 #переключаемся в нашу ветку main на удал.машине
      - name: Set up Go 1.21
        uses: actions/setup-go@v2 #устанавливаем на удаленную машину инструментарий Go
        with:
          go-version: 1.21 #параметры для установки
      - name: Install migrate
        run: |
            curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
            sudo mv migrate.linux-amd64 /usr/local/bin/migrate
      - name: Test
        run: go test ./...

#нам нужно облако развертывания приложения ,тк оно нам создаet эндпоинт для нашего приложения, который будет доступен в интернете.После развертывания ,я получаю URL-адресс приложения
  build_and_push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout main
        uses: actions/checkout@v2
      - name: Build container image
        run: docker build -t $REGISTRY/$IMAGE_NAME:latest .
      - name: Log in to Docker Hub Container Registry
        run: docker login -u flaw1ess -p Topg778877
      - name: Push image to Docker Hub Container Registry
        run: docker push $REGISTRY/$IMAGE_NAME:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    if: github.event_name == 'push'
    steps:
      #- name: Login to Docker Hub
       # run: docker login -u flaw1ess -p Topg778877
      - name: Reboot Container
        run: |
          docker login -u flaw1ess -p Topg778877
          # Stop running container
          docker stop $(echo $CONTAINER_NAME) flaw1ess/crud_api || true
  
          # Remove old container
          docker rm $(echo $CONTAINER_NAME) flaw1ess/crud_api || true
  
            # Run a new container from a new image
          docker run --name $(echo $CONTAINER_NAME) \
          --env-file $(echo $ENV_FILE_PATH) \
          -e POSTGRES_PASSWORD=qwerty \
          -e POSTGRES_USER=postgres \
          -e POSTGRES_DB=postgres \
          -e POSTGRES_HOST=172.17.0.2 \
          -p 5432:5432 \
          $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest
          
  
          sleep 30s
            
          docker exec -it $(echo $CONTAINER_NAME) migrate -path ./schema -database "postgres://postgres:qwerty@172.17.0.2:5432/postgres?sslmode=disable" up
        



